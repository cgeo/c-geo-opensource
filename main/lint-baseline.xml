<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.1.2">

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/AboutActivity.java"
            line="230"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/address/AddressListActivity.java"
            line="30"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/CacheDetailActivity.java"
            line="240"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/CompassActivity.java"
            line="70"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/EditWaypointActivity.java"
            line="200"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/filter/FilterActivity.java"
            line="42"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onCreate(final Bundle icicle) {"
        errorLine2="                   ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="69"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onDestroy`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onDestroy() {"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="84"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onPause`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onPause() {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="89"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onResume`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onResume() {"
        errorLine2="                   ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="94"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onStart`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onStart() {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="114"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onStop`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onStop() {"
        errorLine2="                   ~~~~~~">
        <location
            file="src/cgeo/geocaching/maps/google/v2/GoogleMapActivity.java"
            line="125"
            column="20"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/ImageSelectActivity.java"
            line="59"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/log/LogCacheActivity.java"
            line="208"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/log/LogTrackableActivity.java"
            line="127"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/connector/gc/PocketQueryListActivity.java"
            line="38"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/TrackableActivity.java"
            line="111"
            column="17"/>
    </issue>

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onCreate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    public void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/cgeo/geocaching/helper/UsefulAppsActivity.java"
            line="32"
            column="17"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-ca/strings.xml"
            line="1754"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-cs/strings.xml"
            line="1797"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-da/strings.xml"
            line="1604"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-de/strings.xml"
            line="1764"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-el/strings.xml"
            line="1760"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-fi/strings.xml"
            line="1751"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-fr/strings.xml"
            line="1699"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-hu/strings.xml"
            line="1351"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-it/strings.xml"
            line="1750"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-ja/strings.xml"
            line="1733"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-ko/strings.xml"
            line="1513"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-lb/strings.xml"
            line="663"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-lt/strings.xml"
            line="1627"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-nb/strings.xml"
            line="1697"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-nl/strings.xml"
            line="1756"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-pl/strings.xml"
            line="1806"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-pt/strings.xml"
            line="1759"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-ru/strings.xml"
            line="1741"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-sk/strings.xml"
            line="1805"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-sv/strings.xml"
            line="1695"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-tr/strings.xml"
            line="1752"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-uk/strings.xml"
            line="1535"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values-zh-rTW/strings.xml"
            line="1496"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #1 in `number_input_title`: conversion is `s`, received `int` (argument #2 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="97"/>
        <location
            file="res/values/strings.xml"
            line="1957"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-ca/strings.xml"
            line="1754"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-cs/strings.xml"
            line="1797"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-da/strings.xml"
            line="1604"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-de/strings.xml"
            line="1764"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-el/strings.xml"
            line="1760"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-fi/strings.xml"
            line="1751"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-fr/strings.xml"
            line="1699"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-hu/strings.xml"
            line="1351"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-it/strings.xml"
            line="1750"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-ja/strings.xml"
            line="1733"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-ko/strings.xml"
            line="1513"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-lb/strings.xml"
            line="663"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-lt/strings.xml"
            line="1627"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-nb/strings.xml"
            line="1697"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-nl/strings.xml"
            line="1756"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-pl/strings.xml"
            line="1806"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-pt/strings.xml"
            line="1759"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-ru/strings.xml"
            line="1741"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-sk/strings.xml"
            line="1805"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-sv/strings.xml"
            line="1695"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-tr/strings.xml"
            line="1752"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-uk/strings.xml"
            line="1535"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values-zh-rTW/strings.xml"
            line="1496"
            column="5"/>
    </issue>

    <issue
        id="StringFormatMatches"
        severity="Error"
        message="Suspicious argument type for formatting argument #2 in `number_input_title`: conversion is `s`, received `int` (argument #3 in method call) (Did you mean formatting character `d`, &apos;o&apos; or `x`?)"
        category="Correctness:Messages"
        priority="9"
        summary="`String.format` string doesn&apos;t match the XML format string"
        explanation="This lint check ensures the following:&#xA;(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments&#xA;(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string."
        errorLine1="                        .setTitle(String.format(context.getString(R.string.number_input_title), min, max))"
        errorLine2="                                                                                                     ~~~">
        <location
            file="src/cgeo/geocaching/settings/ColorpickerPreference.java"
            line="136"
            column="102"/>
        <location
            file="res/values/strings.xml"
            line="1957"
            column="5"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;zero&apos;` matches more than one specific number in this locale (0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;zero&quot;>atlikusi viena diena&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lv/strings.xml"
            line="736"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>atlikusi viena diena&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lv/strings.xml"
            line="737"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>Viena slėptuvė&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lt/strings.xml"
            line="775"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>liko viena diena&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lt/strings.xml"
            line="782"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>1 Starpposms&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lv/strings.xml"
            line="803"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>Viena piezīme veiksmīgi augšupielādēta&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lv/strings.xml"
            line="1145"
            column="9"/>
    </issue>

    <issue
        id="ImpliedQuantity"
        severity="Error"
        message="The quantity `&apos;one&apos;` matches more than one specific number in this locale (1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …), but the message did not include a formatting argument (such as `%d`). This is usually an internationalization error. See full issue explanation for more."
        category="Correctness:Messages"
        priority="5"
        summary="Implied Quantities"
        explanation="Plural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that&apos;s not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.&#xA;&#xA;In these locales, it is usually an error to have a message which does not include a formatting argument (such as &apos;%d&apos;), since it will not be clear from the grammar what quantity the quantity string is describing."
        url="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        urls="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals"
        errorLine1="        &lt;item quantity=&quot;one&quot;>Sėkmingai nusiųsta viena pastaba&lt;/item>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="res/values-lt/strings.xml"
            line="1236"
            column="9"/>
    </issue>
</issues>
